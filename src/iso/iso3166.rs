use std::str::FromStr;

use crate::errors;

// ISO 3166:2020

#[derive(Debug, Default)]
pub enum CountryTwoCode {
    AF,
    AL,
    DZ,
    AS,
    AD,
    AO,
    AI,
    AQ,
    AG,
    AR,
    AM,
    AW,
    AU,
    AT,
    AZ,
    BS,
    BH,
    BD,
    BB,
    BY,
    BE,
    BZ,
    BJ,
    BM,
    AX,
    FI,
    FR,
    GF,
    PF,
    TF,
    GA,
    GM,
    GE,
    DE,
    GH,
    GI,
    GR,
    GL,
    GD,
    GP,
    GU,
    GT,
    GG,
    GN,
    GW,
    GY,
    HT,
    HM,
    VA,
    HN,
    HK,
    HU,
    IS,
    IN,
    ID,
    IR,
    IQ,
    IE,
    IM,
    IL,
    IT,
    JM,
    JP,
    JE,
    JO,
    KZ,
    KE,
    KI,
    KP,
    KR,
    KW,
    KG,
    LA,
    LV,
    LB,
    LS,
    LR,
    LY,
    LI,
    LT,
    LU,
    MO,
    MG,
    MW,
    MY,
    MV,
    ML,
    MT,
    MH,
    MQ,
    MR,
    MU,
    YT,
    MX,
    FM,
    MD,
    MC,
    MN,
    ME,
    MS,
    MA,
    MZ,
    MM,
    NA,
    NR,
    NP,
    NL,
    NC,
    NZ,
    NI,
    NE,
    NG,
    NU,
    NF,
    MK,
    MP,
    NO,
    OM,
    PK,
    PW,
    PS,
    PA,
    PG,
    PY,
    PE,
    PH,
    PN,
    PL,
    PT,
    PR,
    QA,
    RO,
    RU,
    RW,
    RE,
    BL,
    SH,
    KN,
    LC,
    MF,
    PM,
    VC,
    WS,
    SM,
    ST,
    SA,
    SN,
    RS,
    SC,
    SL,
    SG,
    SX,
    SK,
    SI,
    SB,
    SO,
    #[default]
    ZA,
    GS,
    SS,
    ES,
    LK,
    SD,
    SR,
    SJ,
    SE,
    CH,
    SY,
    TW,
    TJ,
    TZ,
    TH,
    TL,
    TG,
    TK,
    TO,
    TT,
    TN,
    TM,
    TC,
    TV,
    TR,
    UG,
    UA,
    AE,
    GB,
    UM,
    US,
    UY,
    UZ,
    VU,
    VE,
    VN,
    VG,
    VI,
    WF,
    EH,
    YE,
    ZM,
    ZW,
}

#[derive(Debug, Default)]
pub enum CountryThreeCode {
    AFG,
    ALB,
    DZA,
    ASM,
    AND,
    AGO,
    AIA,
    ATA,
    ATG,
    ARG,
    ARM,
    ABW,
    AUS,
    AUT,
    AZE,
    BHS,
    BHR,
    BGD,
    BRB,
    BLR,
    BEL,
    BLZ,
    BEN,
    BMU,
    ALA,
    FIN,
    FRA,
    GUF,
    PYF,
    ATF,
    GAB,
    GMB,
    GEO,
    DEU,
    GHA,
    GIB,
    GRC,
    GRL,
    GRD,
    GLP,
    GUM,
    GTM,
    GGY,
    GIN,
    GNB,
    GUY,
    HTI,
    HMD,
    VAT,
    HND,
    HKG,
    HUN,
    ISL,
    IND,
    IDN,
    IRN,
    IRQ,
    IRL,
    IMN,
    ISR,
    ITA,
    JAM,
    JPN,
    JEY,
    JOR,
    KAZ,
    KEN,
    KIR,
    PRK,
    KOR,
    KWT,
    KGZ,
    LAO,
    LVA,
    LBN,
    LSO,
    LBR,
    LBY,
    LIE,
    LTU,
    LUX,
    MAC,
    MDG,
    MWI,
    MYS,
    MDV,
    MLI,
    MLT,
    MHL,
    MTQ,
    MRT,
    MUS,
    MYT,
    MEX,
    FSM,
    MDA,
    MCO,
    MNG,
    MNE,
    MSR,
    MAR,
    MOZ,
    MMR,
    NAM,
    NRU,
    NPL,
    NLD,
    NCL,
    NZL,
    NIC,
    NER,
    NGA,
    NIU,
    NFK,
    MKD,
    MNP,
    NOR,
    OMN,
    PAK,
    PLW,
    PSE,
    PAN,
    PNG,
    PRY,
    PER,
    PHL,
    PCN,
    POL,
    PRT,
    PRI,
    QAT,
    ROU,
    RUS,
    RWA,
    REU,
    BLM,
    SHN,
    KNA,
    LCA,
    MAF,
    SPM,
    VCT,
    WSM,
    SMR,
    STP,
    SAU,
    SEN,
    SRB,
    SYC,
    SLE,
    SGP,
    SXM,
    SVK,
    SVN,
    SLB,
    SOM,
    #[default]
    ZAF,
    SGS,
    SSD,
    ESP,
    LKA,
    SDN,
    SUR,
    SJM,
    SWE,
    CHE,
    SYR,
    TWN,
    TJK,
    TZA,
    THA,
    TLS,
    TGO,
    TKL,
    TON,
    TTO,
    TUN,
    TKM,
    TCA,
    TUV,
    TUR,
    UGA,
    UKR,
    ARE,
    GBR,
    UMI,
    USA,
    URY,
    UZB,
    VUT,
    VEN,
    VNM,
    VGB,
    VIR,
    WLF,
    ESH,
    YEM,
    ZMB,
    ZWE,
}

impl From<CountryThreeCode> for CountryTwoCode {
    fn from(value: CountryThreeCode) -> Self {
        match value {
            CountryThreeCode::AFG => Self::AF,
            CountryThreeCode::ALB => Self::AL,
            CountryThreeCode::DZA => Self::DZ,
            CountryThreeCode::ASM => Self::AS,
            CountryThreeCode::AND => Self::AD,
            CountryThreeCode::AGO => Self::AO,
            CountryThreeCode::AIA => Self::AI,
            CountryThreeCode::ATA => Self::AQ,
            CountryThreeCode::ATG => Self::AG,
            CountryThreeCode::ARG => Self::AR,
            CountryThreeCode::ARM => Self::AM,
            CountryThreeCode::ABW => Self::AW,
            CountryThreeCode::AUS => Self::AU,
            CountryThreeCode::AUT => Self::AT,
            CountryThreeCode::AZE => Self::AZ,
            CountryThreeCode::BHS => Self::BS,
            CountryThreeCode::BHR => Self::BH,
            CountryThreeCode::BGD => Self::BD,
            CountryThreeCode::BRB => Self::BB,
            CountryThreeCode::BLR => Self::BY,
            CountryThreeCode::BEL => Self::BE,
            CountryThreeCode::BLZ => Self::BZ,
            CountryThreeCode::BEN => Self::BJ,
            CountryThreeCode::BMU => Self::BM,
            CountryThreeCode::ALA => Self::AX,
            CountryThreeCode::FIN => Self::FI,
            CountryThreeCode::FRA => Self::FR,
            CountryThreeCode::GUF => Self::GF,
            CountryThreeCode::PYF => Self::PF,
            CountryThreeCode::ATF => Self::TF,
            CountryThreeCode::GAB => Self::GA,
            CountryThreeCode::GMB => Self::GM,
            CountryThreeCode::GEO => Self::GE,
            CountryThreeCode::DEU => Self::DE,
            CountryThreeCode::GHA => Self::GH,
            CountryThreeCode::GIB => Self::GI,
            CountryThreeCode::GRC => Self::GR,
            CountryThreeCode::GRL => Self::GL,
            CountryThreeCode::GRD => Self::GD,
            CountryThreeCode::GLP => Self::GP,
            CountryThreeCode::GUM => Self::GU,
            CountryThreeCode::GTM => Self::GT,
            CountryThreeCode::GGY => Self::GG,
            CountryThreeCode::GIN => Self::GN,
            CountryThreeCode::GNB => Self::GW,
            CountryThreeCode::GUY => Self::GY,
            CountryThreeCode::HTI => Self::HT,
            CountryThreeCode::HMD => Self::HM,
            CountryThreeCode::VAT => Self::VA,
            CountryThreeCode::HND => Self::HN,
            CountryThreeCode::HKG => Self::HK,
            CountryThreeCode::HUN => Self::HU,
            CountryThreeCode::ISL => Self::IS,
            CountryThreeCode::IND => Self::IN,
            CountryThreeCode::IDN => Self::ID,
            CountryThreeCode::IRN => Self::IR,
            CountryThreeCode::IRQ => Self::IQ,
            CountryThreeCode::IRL => Self::IE,
            CountryThreeCode::IMN => Self::IM,
            CountryThreeCode::ISR => Self::IL,
            CountryThreeCode::ITA => Self::IT,
            CountryThreeCode::JAM => Self::JM,
            CountryThreeCode::JPN => Self::JP,
            CountryThreeCode::JEY => Self::JE,
            CountryThreeCode::JOR => Self::JO,
            CountryThreeCode::KAZ => Self::KZ,
            CountryThreeCode::KEN => Self::KE,
            CountryThreeCode::KIR => Self::KI,
            CountryThreeCode::PRK => Self::KP,
            CountryThreeCode::KOR => Self::KR,
            CountryThreeCode::KWT => Self::KW,
            CountryThreeCode::KGZ => Self::KG,
            CountryThreeCode::LAO => Self::LA,
            CountryThreeCode::LVA => Self::LV,
            CountryThreeCode::LBN => Self::LB,
            CountryThreeCode::LSO => Self::LS,
            CountryThreeCode::LBR => Self::LR,
            CountryThreeCode::LBY => Self::LY,
            CountryThreeCode::LIE => Self::LI,
            CountryThreeCode::LTU => Self::LT,
            CountryThreeCode::LUX => Self::LU,
            CountryThreeCode::MAC => Self::MO,
            CountryThreeCode::MDG => Self::MG,
            CountryThreeCode::MWI => Self::MW,
            CountryThreeCode::MYS => Self::MY,
            CountryThreeCode::MDV => Self::MV,
            CountryThreeCode::MLI => Self::ML,
            CountryThreeCode::MLT => Self::MT,
            CountryThreeCode::MHL => Self::MH,
            CountryThreeCode::MTQ => Self::MQ,
            CountryThreeCode::MRT => Self::MR,
            CountryThreeCode::MUS => Self::MU,
            CountryThreeCode::MYT => Self::YT,
            CountryThreeCode::MEX => Self::MX,
            CountryThreeCode::FSM => Self::FM,
            CountryThreeCode::MDA => Self::MD,
            CountryThreeCode::MCO => Self::MC,
            CountryThreeCode::MNG => Self::MN,
            CountryThreeCode::MNE => Self::ME,
            CountryThreeCode::MSR => Self::MS,
            CountryThreeCode::MAR => Self::MA,
            CountryThreeCode::MOZ => Self::MZ,
            CountryThreeCode::MMR => Self::MM,
            CountryThreeCode::NAM => Self::NA,
            CountryThreeCode::NRU => Self::NR,
            CountryThreeCode::NPL => Self::NP,
            CountryThreeCode::NLD => Self::NL,
            CountryThreeCode::NCL => Self::NC,
            CountryThreeCode::NZL => Self::NZ,
            CountryThreeCode::NIC => Self::NI,
            CountryThreeCode::NER => Self::NE,
            CountryThreeCode::NGA => Self::NG,
            CountryThreeCode::NIU => Self::NU,
            CountryThreeCode::NFK => Self::NF,
            CountryThreeCode::MKD => Self::MK,
            CountryThreeCode::MNP => Self::MP,
            CountryThreeCode::NOR => Self::NO,
            CountryThreeCode::OMN => Self::OM,
            CountryThreeCode::PAK => Self::PK,
            CountryThreeCode::PLW => Self::PW,
            CountryThreeCode::PSE => Self::PS,
            CountryThreeCode::PAN => Self::PA,
            CountryThreeCode::PNG => Self::PG,
            CountryThreeCode::PRY => Self::PY,
            CountryThreeCode::PER => Self::PE,
            CountryThreeCode::PHL => Self::PH,
            CountryThreeCode::PCN => Self::PN,
            CountryThreeCode::POL => Self::PL,
            CountryThreeCode::PRT => Self::PT,
            CountryThreeCode::PRI => Self::PR,
            CountryThreeCode::QAT => Self::QA,
            CountryThreeCode::ROU => Self::RO,
            CountryThreeCode::RUS => Self::RU,
            CountryThreeCode::RWA => Self::RW,
            CountryThreeCode::REU => Self::RE,
            CountryThreeCode::BLM => Self::BL,
            CountryThreeCode::SHN => Self::SH,
            CountryThreeCode::KNA => Self::KN,
            CountryThreeCode::LCA => Self::LC,
            CountryThreeCode::MAF => Self::MF,
            CountryThreeCode::SPM => Self::PM,
            CountryThreeCode::VCT => Self::VC,
            CountryThreeCode::WSM => Self::WS,
            CountryThreeCode::SMR => Self::SM,
            CountryThreeCode::STP => Self::ST,
            CountryThreeCode::SAU => Self::SA,
            CountryThreeCode::SEN => Self::SN,
            CountryThreeCode::SRB => Self::RS,
            CountryThreeCode::SYC => Self::SC,
            CountryThreeCode::SLE => Self::SL,
            CountryThreeCode::SGP => Self::SG,
            CountryThreeCode::SXM => Self::SX,
            CountryThreeCode::SVK => Self::SK,
            CountryThreeCode::SVN => Self::SI,
            CountryThreeCode::SLB => Self::SB,
            CountryThreeCode::SOM => Self::SO,
            CountryThreeCode::ZAF => Self::ZA,
            CountryThreeCode::SGS => Self::GS,
            CountryThreeCode::SSD => Self::SS,
            CountryThreeCode::ESP => Self::ES,
            CountryThreeCode::LKA => Self::LK,
            CountryThreeCode::SDN => Self::SD,
            CountryThreeCode::SUR => Self::SR,
            CountryThreeCode::SJM => Self::SJ,
            CountryThreeCode::SWE => Self::SE,
            CountryThreeCode::CHE => Self::CH,
            CountryThreeCode::SYR => Self::SY,
            CountryThreeCode::TWN => Self::TW,
            CountryThreeCode::TJK => Self::TJ,
            CountryThreeCode::TZA => Self::TZ,
            CountryThreeCode::THA => Self::TH,
            CountryThreeCode::TLS => Self::TL,
            CountryThreeCode::TGO => Self::TG,
            CountryThreeCode::TKL => Self::TK,
            CountryThreeCode::TON => Self::TO,
            CountryThreeCode::TTO => Self::TT,
            CountryThreeCode::TUN => Self::TN,
            CountryThreeCode::TKM => Self::TM,
            CountryThreeCode::TCA => Self::TC,
            CountryThreeCode::TUV => Self::TV,
            CountryThreeCode::TUR => Self::TR,
            CountryThreeCode::UGA => Self::UG,
            CountryThreeCode::UKR => Self::UA,
            CountryThreeCode::ARE => Self::AE,
            CountryThreeCode::GBR => Self::GB,
            CountryThreeCode::UMI => Self::UM,
            CountryThreeCode::USA => Self::US,
            CountryThreeCode::URY => Self::UY,
            CountryThreeCode::UZB => Self::UZ,
            CountryThreeCode::VUT => Self::VU,
            CountryThreeCode::VEN => Self::VE,
            CountryThreeCode::VNM => Self::VN,
            CountryThreeCode::VGB => Self::VG,
            CountryThreeCode::VIR => Self::VI,
            CountryThreeCode::WLF => Self::WF,
            CountryThreeCode::ESH => Self::EH,
            CountryThreeCode::YEM => Self::YE,
            CountryThreeCode::ZMB => Self::ZM,
            CountryThreeCode::ZWE => Self::ZW,
        }
    }
}

impl FromStr for CountryTwoCode {
    type Err = errors::CountryCodeParsing;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "AF" => Ok(Self::AF),
            "AL" => Ok(Self::AL),
            "DZ" => Ok(Self::DZ),
            "AS" => Ok(Self::AS),
            "AD" => Ok(Self::AD),
            "AO" => Ok(Self::AO),
            "AI" => Ok(Self::AI),
            "AQ" => Ok(Self::AQ),
            "AG" => Ok(Self::AG),
            "AR" => Ok(Self::AR),
            "AM" => Ok(Self::AM),
            "AW" => Ok(Self::AW),
            "AU" => Ok(Self::AU),
            "AT" => Ok(Self::AT),
            "AZ" => Ok(Self::AZ),
            "BS" => Ok(Self::BS),
            "BH" => Ok(Self::BH),
            "BD" => Ok(Self::BD),
            "BB" => Ok(Self::BB),
            "BY" => Ok(Self::BY),
            "BE" => Ok(Self::BE),
            "BZ" => Ok(Self::BZ),
            "BJ" => Ok(Self::BJ),
            "BM" => Ok(Self::BM),
            "AX" => Ok(Self::AX),
            "FI" => Ok(Self::FI),
            "FR" => Ok(Self::FR),
            "GF" => Ok(Self::GF),
            "PF" => Ok(Self::PF),
            "TF" => Ok(Self::TF),
            "GA" => Ok(Self::GA),
            "GM" => Ok(Self::GM),
            "GE" => Ok(Self::GE),
            "DE" => Ok(Self::DE),
            "GH" => Ok(Self::GH),
            "GI" => Ok(Self::GI),
            "GR" => Ok(Self::GR),
            "GL" => Ok(Self::GL),
            "GD" => Ok(Self::GD),
            "GP" => Ok(Self::GP),
            "GU" => Ok(Self::GU),
            "GT" => Ok(Self::GT),
            "GG" => Ok(Self::GG),
            "GN" => Ok(Self::GN),
            "GW" => Ok(Self::GW),
            "GY" => Ok(Self::GY),
            "HT" => Ok(Self::HT),
            "HM" => Ok(Self::HM),
            "VA" => Ok(Self::VA),
            "HN" => Ok(Self::HN),
            "HK" => Ok(Self::HK),
            "HU" => Ok(Self::HU),
            "IS" => Ok(Self::IS),
            "IN" => Ok(Self::IN),
            "ID" => Ok(Self::ID),
            "IR" => Ok(Self::IR),
            "IQ" => Ok(Self::IQ),
            "IE" => Ok(Self::IE),
            "IM" => Ok(Self::IM),
            "IL" => Ok(Self::IL),
            "IT" => Ok(Self::IT),
            "JM" => Ok(Self::JM),
            "JP" => Ok(Self::JP),
            "JE" => Ok(Self::JE),
            "JO" => Ok(Self::JO),
            "KZ" => Ok(Self::KZ),
            "KE" => Ok(Self::KE),
            "KI" => Ok(Self::KI),
            "KP" => Ok(Self::KP),
            "KR" => Ok(Self::KR),
            "KW" => Ok(Self::KW),
            "KG" => Ok(Self::KG),
            "LA" => Ok(Self::LA),
            "LV" => Ok(Self::LV),
            "LB" => Ok(Self::LB),
            "LS" => Ok(Self::LS),
            "LR" => Ok(Self::LR),
            "LY" => Ok(Self::LY),
            "LI" => Ok(Self::LI),
            "LT" => Ok(Self::LT),
            "LU" => Ok(Self::LU),
            "MO" => Ok(Self::MO),
            "MG" => Ok(Self::MG),
            "MW" => Ok(Self::MW),
            "MY" => Ok(Self::MY),
            "MV" => Ok(Self::MV),
            "ML" => Ok(Self::ML),
            "MT" => Ok(Self::MT),
            "MH" => Ok(Self::MH),
            "MQ" => Ok(Self::MQ),
            "MR" => Ok(Self::MR),
            "MU" => Ok(Self::MU),
            "YT" => Ok(Self::YT),
            "MX" => Ok(Self::MX),
            "FM" => Ok(Self::FM),
            "MD" => Ok(Self::MD),
            "MC" => Ok(Self::MC),
            "MN" => Ok(Self::MN),
            "ME" => Ok(Self::ME),
            "MS" => Ok(Self::MS),
            "MA" => Ok(Self::MA),
            "MZ" => Ok(Self::MZ),
            "MM" => Ok(Self::MM),
            "NA" => Ok(Self::NA),
            "NR" => Ok(Self::NR),
            "NP" => Ok(Self::NP),
            "NL" => Ok(Self::NL),
            "NC" => Ok(Self::NC),
            "NZ" => Ok(Self::NZ),
            "NI" => Ok(Self::NI),
            "NE" => Ok(Self::NE),
            "NG" => Ok(Self::NG),
            "NU" => Ok(Self::NU),
            "NF" => Ok(Self::NF),
            "MK" => Ok(Self::MK),
            "MP" => Ok(Self::MP),
            "NO" => Ok(Self::NO),
            "OM" => Ok(Self::OM),
            "PK" => Ok(Self::PK),
            "PW" => Ok(Self::PW),
            "PS" => Ok(Self::PS),
            "PA" => Ok(Self::PA),
            "PG" => Ok(Self::PG),
            "PY" => Ok(Self::PY),
            "PE" => Ok(Self::PE),
            "PH" => Ok(Self::PH),
            "PN" => Ok(Self::PN),
            "PL" => Ok(Self::PL),
            "PT" => Ok(Self::PT),
            "PR" => Ok(Self::PR),
            "QA" => Ok(Self::QA),
            "RO" => Ok(Self::RO),
            "RU" => Ok(Self::RU),
            "RW" => Ok(Self::RW),
            "RE" => Ok(Self::RE),
            "BL" => Ok(Self::BL),
            "SH" => Ok(Self::SH),
            "KN" => Ok(Self::KN),
            "LC" => Ok(Self::LC),
            "MF" => Ok(Self::MF),
            "PM" => Ok(Self::PM),
            "VC" => Ok(Self::VC),
            "WS" => Ok(Self::WS),
            "SM" => Ok(Self::SM),
            "ST" => Ok(Self::ST),
            "SA" => Ok(Self::SA),
            "SN" => Ok(Self::SN),
            "RS" => Ok(Self::RS),
            "SC" => Ok(Self::SC),
            "SL" => Ok(Self::SL),
            "SG" => Ok(Self::SG),
            "SX" => Ok(Self::SX),
            "SK" => Ok(Self::SK),
            "SI" => Ok(Self::SI),
            "SB" => Ok(Self::SB),
            "SO" => Ok(Self::SO),
            "ZA" => Ok(Self::ZA),
            "GS" => Ok(Self::GS),
            "SS" => Ok(Self::SS),
            "ES" => Ok(Self::ES),
            "LK" => Ok(Self::LK),
            "SD" => Ok(Self::SD),
            "SR" => Ok(Self::SR),
            "SJ" => Ok(Self::SJ),
            "SE" => Ok(Self::SE),
            "CH" => Ok(Self::CH),
            "SY" => Ok(Self::SY),
            "TW" => Ok(Self::TW),
            "TJ" => Ok(Self::TJ),
            "TZ" => Ok(Self::TZ),
            "TH" => Ok(Self::TH),
            "TL" => Ok(Self::TL),
            "TG" => Ok(Self::TG),
            "TK" => Ok(Self::TK),
            "TO" => Ok(Self::TO),
            "TT" => Ok(Self::TT),
            "TN" => Ok(Self::TN),
            "TM" => Ok(Self::TM),
            "TC" => Ok(Self::TC),
            "TV" => Ok(Self::TV),
            "TR" => Ok(Self::TR),
            "UG" => Ok(Self::UG),
            "UA" => Ok(Self::UA),
            "AE" => Ok(Self::AE),
            "GB" => Ok(Self::GB),
            "UM" => Ok(Self::UM),
            "US" => Ok(Self::US),
            "UY" => Ok(Self::UY),
            "UZ" => Ok(Self::UZ),
            "VU" => Ok(Self::VU),
            "VE" => Ok(Self::VE),
            "VN" => Ok(Self::VN),
            "VG" => Ok(Self::VG),
            "VI" => Ok(Self::VI),
            "WF" => Ok(Self::WF),
            "EH" => Ok(Self::EH),
            "YE" => Ok(Self::YE),
            "ZM" => Ok(Self::ZM),
            "ZW" => Ok(Self::ZW),
            _ => Err(errors::CountryCodeParsing(s.to_string())),
        }
    }
}

impl FromStr for CountryThreeCode {
    type Err = errors::CountryCodeParsing;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "AFG" => Ok(Self::AFG),
            "ALB" => Ok(Self::ALB),
            "DZA" => Ok(Self::DZA),
            "ASM" => Ok(Self::ASM),
            "AND" => Ok(Self::AND),
            "AGO" => Ok(Self::AGO),
            "AIA" => Ok(Self::AIA),
            "ATA" => Ok(Self::ATA),
            "ATG" => Ok(Self::ATG),
            "ARG" => Ok(Self::ARG),
            "ARM" => Ok(Self::ARM),
            "ABW" => Ok(Self::ABW),
            "AUS" => Ok(Self::AUS),
            "AUT" => Ok(Self::AUT),
            "AZE" => Ok(Self::AZE),
            "BHS" => Ok(Self::BHS),
            "BHR" => Ok(Self::BHR),
            "BGD" => Ok(Self::BGD),
            "BRB" => Ok(Self::BRB),
            "BLR" => Ok(Self::BLR),
            "BEL" => Ok(Self::BEL),
            "BLZ" => Ok(Self::BLZ),
            "BEN" => Ok(Self::BEN),
            "BMU" => Ok(Self::BMU),
            "ALA" => Ok(Self::ALA),
            "FIN" => Ok(Self::FIN),
            "FRA" => Ok(Self::FRA),
            "GUF" => Ok(Self::GUF),
            "PYF" => Ok(Self::PYF),
            "ATF" => Ok(Self::ATF),
            "GAB" => Ok(Self::GAB),
            "GMB" => Ok(Self::GMB),
            "GEO" => Ok(Self::GEO),
            "DEU" => Ok(Self::DEU),
            "GHA" => Ok(Self::GHA),
            "GIB" => Ok(Self::GIB),
            "GRC" => Ok(Self::GRC),
            "GRL" => Ok(Self::GRL),
            "GRD" => Ok(Self::GRD),
            "GLP" => Ok(Self::GLP),
            "GUM" => Ok(Self::GUM),
            "GTM" => Ok(Self::GTM),
            "GGY" => Ok(Self::GGY),
            "GIN" => Ok(Self::GIN),
            "GNB" => Ok(Self::GNB),
            "GUY" => Ok(Self::GUY),
            "HTI" => Ok(Self::HTI),
            "HMD" => Ok(Self::HMD),
            "VAT" => Ok(Self::VAT),
            "HND" => Ok(Self::HND),
            "HKG" => Ok(Self::HKG),
            "HUN" => Ok(Self::HUN),
            "ISL" => Ok(Self::ISL),
            "IND" => Ok(Self::IND),
            "IDN" => Ok(Self::IDN),
            "IRN" => Ok(Self::IRN),
            "IRQ" => Ok(Self::IRQ),
            "IRL" => Ok(Self::IRL),
            "IMN" => Ok(Self::IMN),
            "ISR" => Ok(Self::ISR),
            "ITA" => Ok(Self::ITA),
            "JAM" => Ok(Self::JAM),
            "JPN" => Ok(Self::JPN),
            "JEY" => Ok(Self::JEY),
            "JOR" => Ok(Self::JOR),
            "KAZ" => Ok(Self::KAZ),
            "KEN" => Ok(Self::KEN),
            "KIR" => Ok(Self::KIR),
            "PRK" => Ok(Self::PRK),
            "KOR" => Ok(Self::KOR),
            "KWT" => Ok(Self::KWT),
            "KGZ" => Ok(Self::KGZ),
            "LAO" => Ok(Self::LAO),
            "LVA" => Ok(Self::LVA),
            "LBN" => Ok(Self::LBN),
            "LSO" => Ok(Self::LSO),
            "LBR" => Ok(Self::LBR),
            "LBY" => Ok(Self::LBY),
            "LIE" => Ok(Self::LIE),
            "LTU" => Ok(Self::LTU),
            "LUX" => Ok(Self::LUX),
            "MAC" => Ok(Self::MAC),
            "MDG" => Ok(Self::MDG),
            "MWI" => Ok(Self::MWI),
            "MYS" => Ok(Self::MYS),
            "MDV" => Ok(Self::MDV),
            "MLI" => Ok(Self::MLI),
            "MLT" => Ok(Self::MLT),
            "MHL" => Ok(Self::MHL),
            "MTQ" => Ok(Self::MTQ),
            "MRT" => Ok(Self::MRT),
            "MUS" => Ok(Self::MUS),
            "MYT" => Ok(Self::MYT),
            "MEX" => Ok(Self::MEX),
            "FSM" => Ok(Self::FSM),
            "MDA" => Ok(Self::MDA),
            "MCO" => Ok(Self::MCO),
            "MNG" => Ok(Self::MNG),
            "MNE" => Ok(Self::MNE),
            "MSR" => Ok(Self::MSR),
            "MAR" => Ok(Self::MAR),
            "MOZ" => Ok(Self::MOZ),
            "MMR" => Ok(Self::MMR),
            "NAM" => Ok(Self::NAM),
            "NRU" => Ok(Self::NRU),
            "NPL" => Ok(Self::NPL),
            "NLD" => Ok(Self::NLD),
            "NCL" => Ok(Self::NCL),
            "NZL" => Ok(Self::NZL),
            "NIC" => Ok(Self::NIC),
            "NER" => Ok(Self::NER),
            "NGA" => Ok(Self::NGA),
            "NIU" => Ok(Self::NIU),
            "NFK" => Ok(Self::NFK),
            "MKD" => Ok(Self::MKD),
            "MNP" => Ok(Self::MNP),
            "NOR" => Ok(Self::NOR),
            "OMN" => Ok(Self::OMN),
            "PAK" => Ok(Self::PAK),
            "PLW" => Ok(Self::PLW),
            "PSE" => Ok(Self::PSE),
            "PAN" => Ok(Self::PAN),
            "PNG" => Ok(Self::PNG),
            "PRY" => Ok(Self::PRY),
            "PER" => Ok(Self::PER),
            "PHL" => Ok(Self::PHL),
            "PCN" => Ok(Self::PCN),
            "POL" => Ok(Self::POL),
            "PRT" => Ok(Self::PRT),
            "PRI" => Ok(Self::PRI),
            "QAT" => Ok(Self::QAT),
            "ROU" => Ok(Self::ROU),
            "RUS" => Ok(Self::RUS),
            "RWA" => Ok(Self::RWA),
            "REU" => Ok(Self::REU),
            "BLM" => Ok(Self::BLM),
            "SHN" => Ok(Self::SHN),
            "KNA" => Ok(Self::KNA),
            "LCA" => Ok(Self::LCA),
            "MAF" => Ok(Self::MAF),
            "SPM" => Ok(Self::SPM),
            "VCT" => Ok(Self::VCT),
            "WSM" => Ok(Self::WSM),
            "SMR" => Ok(Self::SMR),
            "STP" => Ok(Self::STP),
            "SAU" => Ok(Self::SAU),
            "SEN" => Ok(Self::SEN),
            "SRB" => Ok(Self::SRB),
            "SYC" => Ok(Self::SYC),
            "SLE" => Ok(Self::SLE),
            "SGP" => Ok(Self::SGP),
            "SXM" => Ok(Self::SXM),
            "SVK" => Ok(Self::SVK),
            "SVN" => Ok(Self::SVN),
            "SLB" => Ok(Self::SLB),
            "SOM" => Ok(Self::SOM),
            "ZAF" => Ok(Self::ZAF),
            "ZAR" => Ok(Self::ZAF),
            "SGS" => Ok(Self::SGS),
            "SSD" => Ok(Self::SSD),
            "ESP" => Ok(Self::ESP),
            "LKA" => Ok(Self::LKA),
            "SDN" => Ok(Self::SDN),
            "SUR" => Ok(Self::SUR),
            "SJM" => Ok(Self::SJM),
            "SWE" => Ok(Self::SWE),
            "CHE" => Ok(Self::CHE),
            "SYR" => Ok(Self::SYR),
            "TWN" => Ok(Self::TWN),
            "TJK" => Ok(Self::TJK),
            "TZA" => Ok(Self::TZA),
            "THA" => Ok(Self::THA),
            "TLS" => Ok(Self::TLS),
            "TGO" => Ok(Self::TGO),
            "TKL" => Ok(Self::TKL),
            "TON" => Ok(Self::TON),
            "TTO" => Ok(Self::TTO),
            "TUN" => Ok(Self::TUN),
            "TKM" => Ok(Self::TKM),
            "TCA" => Ok(Self::TCA),
            "TUV" => Ok(Self::TUV),
            "TUR" => Ok(Self::TUR),
            "UGA" => Ok(Self::UGA),
            "UKR" => Ok(Self::UKR),
            "ARE" => Ok(Self::ARE),
            "GBR" => Ok(Self::GBR),
            "UMI" => Ok(Self::UMI),
            "USA" => Ok(Self::USA),
            "URY" => Ok(Self::URY),
            "UZB" => Ok(Self::UZB),
            "VUT" => Ok(Self::VUT),
            "VEN" => Ok(Self::VEN),
            "VNM" => Ok(Self::VNM),
            "VGB" => Ok(Self::VGB),
            "VIR" => Ok(Self::VIR),
            "WLF" => Ok(Self::WLF),
            "ESH" => Ok(Self::ESH),
            "YEM" => Ok(Self::YEM),
            "ZMB" => Ok(Self::ZMB),
            "ZWE" => Ok(Self::ZWE),
            _ => Err(errors::CountryCodeParsing(s.to_string())),
        }
    }
}

impl std::fmt::Display for CountryTwoCode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Self::AL => write!(f, "AL"),
            Self::AF => write!(f, "AF"),
            Self::DZ => write!(f, "DZ"),
            Self::AS => write!(f, "AS"),
            Self::AD => write!(f, "AD"),
            Self::AO => write!(f, "AO"),
            Self::AI => write!(f, "AI"),
            Self::AQ => write!(f, "AQ"),
            Self::AG => write!(f, "AG"),
            Self::AR => write!(f, "AR"),
            Self::AM => write!(f, "AM"),
            Self::AW => write!(f, "AW"),
            Self::AU => write!(f, "AU"),
            Self::AT => write!(f, "AT"),
            Self::AZ => write!(f, "AZ"),
            Self::BS => write!(f, "BS"),
            Self::BH => write!(f, "BH"),
            Self::BD => write!(f, "BD"),
            Self::BB => write!(f, "BB"),
            Self::BY => write!(f, "BY"),
            Self::BE => write!(f, "BE"),
            Self::BZ => write!(f, "BZ"),
            Self::BJ => write!(f, "BJ"),
            Self::BM => write!(f, "BM"),
            Self::AX => write!(f, "AX"),
            Self::FI => write!(f, "FI"),
            Self::FR => write!(f, "FR"),
            Self::GF => write!(f, "GF"),
            Self::PF => write!(f, "PF"),
            Self::TF => write!(f, "TF"),
            Self::GA => write!(f, "GA"),
            Self::GM => write!(f, "GM"),
            Self::GE => write!(f, "GE"),
            Self::DE => write!(f, "DE"),
            Self::GH => write!(f, "GH"),
            Self::GI => write!(f, "GI"),
            Self::GR => write!(f, "GR"),
            Self::GL => write!(f, "GL"),
            Self::GD => write!(f, "GD"),
            Self::GP => write!(f, "GP"),
            Self::GU => write!(f, "GU"),
            Self::GT => write!(f, "GT"),
            Self::GG => write!(f, "GG"),
            Self::GN => write!(f, "GN"),
            Self::GW => write!(f, "GW"),
            Self::GY => write!(f, "GY"),
            Self::HT => write!(f, "HT"),
            Self::HM => write!(f, "HM"),
            Self::VA => write!(f, "VA"),
            Self::HN => write!(f, "HN"),
            Self::HK => write!(f, "HK"),
            Self::HU => write!(f, "HU"),
            Self::IS => write!(f, "IS"),
            Self::IN => write!(f, "IN"),
            Self::ID => write!(f, "ID"),
            Self::IR => write!(f, "IR"),
            Self::IQ => write!(f, "IQ"),
            Self::IE => write!(f, "IE"),
            Self::IM => write!(f, "IM"),
            Self::IL => write!(f, "IL"),
            Self::IT => write!(f, "IT"),
            Self::JM => write!(f, "JM"),
            Self::JP => write!(f, "JP"),
            Self::JE => write!(f, "JE"),
            Self::JO => write!(f, "JO"),
            Self::KZ => write!(f, "KZ"),
            Self::KE => write!(f, "KE"),
            Self::KI => write!(f, "KI"),
            Self::KP => write!(f, "KP"),
            Self::KR => write!(f, "KR"),
            Self::KW => write!(f, "KW"),
            Self::KG => write!(f, "KG"),
            Self::LA => write!(f, "LA"),
            Self::LV => write!(f, "LV"),
            Self::LB => write!(f, "LB"),
            Self::LS => write!(f, "LS"),
            Self::LR => write!(f, "LR"),
            Self::LY => write!(f, "LY"),
            Self::LI => write!(f, "LI"),
            Self::LT => write!(f, "LT"),
            Self::LU => write!(f, "LU"),
            Self::MO => write!(f, "MO"),
            Self::MG => write!(f, "MG"),
            Self::MW => write!(f, "MW"),
            Self::MY => write!(f, "MY"),
            Self::MV => write!(f, "MV"),
            Self::ML => write!(f, "ML"),
            Self::MT => write!(f, "MT"),
            Self::MH => write!(f, "MH"),
            Self::MQ => write!(f, "MQ"),
            Self::MR => write!(f, "MR"),
            Self::MU => write!(f, "MU"),
            Self::YT => write!(f, "YT"),
            Self::MX => write!(f, "MX"),
            Self::FM => write!(f, "FM"),
            Self::MD => write!(f, "MD"),
            Self::MC => write!(f, "MC"),
            Self::MN => write!(f, "MN"),
            Self::ME => write!(f, "ME"),
            Self::MS => write!(f, "MS"),
            Self::MA => write!(f, "MA"),
            Self::MZ => write!(f, "MZ"),
            Self::MM => write!(f, "MM"),
            Self::NA => write!(f, "NA"),
            Self::NR => write!(f, "NR"),
            Self::NP => write!(f, "NP"),
            Self::NL => write!(f, "NL"),
            Self::NC => write!(f, "NC"),
            Self::NZ => write!(f, "NZ"),
            Self::NI => write!(f, "NI"),
            Self::NE => write!(f, "NE"),
            Self::NG => write!(f, "NG"),
            Self::NU => write!(f, "NU"),
            Self::NF => write!(f, "NF"),
            Self::MK => write!(f, "MK"),
            Self::MP => write!(f, "MP"),
            Self::NO => write!(f, "NO"),
            Self::OM => write!(f, "OM"),
            Self::PK => write!(f, "PK"),
            Self::PW => write!(f, "PW"),
            Self::PS => write!(f, "PS"),
            Self::PA => write!(f, "PA"),
            Self::PG => write!(f, "PG"),
            Self::PY => write!(f, "PY"),
            Self::PE => write!(f, "PE"),
            Self::PH => write!(f, "PH"),
            Self::PN => write!(f, "PN"),
            Self::PL => write!(f, "PL"),
            Self::PT => write!(f, "PT"),
            Self::PR => write!(f, "PR"),
            Self::QA => write!(f, "QA"),
            Self::RO => write!(f, "RO"),
            Self::RU => write!(f, "RU"),
            Self::RW => write!(f, "RW"),
            Self::RE => write!(f, "RE"),
            Self::BL => write!(f, "BL"),
            Self::SH => write!(f, "SH"),
            Self::KN => write!(f, "KN"),
            Self::LC => write!(f, "LC"),
            Self::MF => write!(f, "MF"),
            Self::PM => write!(f, "PM"),
            Self::VC => write!(f, "VC"),
            Self::WS => write!(f, "WS"),
            Self::SM => write!(f, "SM"),
            Self::ST => write!(f, "ST"),
            Self::SA => write!(f, "SA"),
            Self::SN => write!(f, "SN"),
            Self::RS => write!(f, "RS"),
            Self::SC => write!(f, "SC"),
            Self::SL => write!(f, "SL"),
            Self::SG => write!(f, "SG"),
            Self::SX => write!(f, "SX"),
            Self::SK => write!(f, "SK"),
            Self::SI => write!(f, "SI"),
            Self::SB => write!(f, "SB"),
            Self::SO => write!(f, "SO"),
            Self::ZA => write!(f, "ZA"),
            Self::GS => write!(f, "GS"),
            Self::SS => write!(f, "SS"),
            Self::ES => write!(f, "ES"),
            Self::LK => write!(f, "LK"),
            Self::SD => write!(f, "SD"),
            Self::SR => write!(f, "SR"),
            Self::SJ => write!(f, "SJ"),
            Self::SE => write!(f, "SE"),
            Self::CH => write!(f, "CH"),
            Self::SY => write!(f, "SY"),
            Self::TW => write!(f, "TW"),
            Self::TJ => write!(f, "TJ"),
            Self::TZ => write!(f, "TZ"),
            Self::TH => write!(f, "TH"),
            Self::TL => write!(f, "TL"),
            Self::TG => write!(f, "TG"),
            Self::TK => write!(f, "TK"),
            Self::TO => write!(f, "TO"),
            Self::TT => write!(f, "TT"),
            Self::TN => write!(f, "TN"),
            Self::TM => write!(f, "TM"),
            Self::TC => write!(f, "TC"),
            Self::TV => write!(f, "TV"),
            Self::TR => write!(f, "TR"),
            Self::UG => write!(f, "UG"),
            Self::UA => write!(f, "UA"),
            Self::AE => write!(f, "AE"),
            Self::GB => write!(f, "GB"),
            Self::UM => write!(f, "UM"),
            Self::US => write!(f, "US"),
            Self::UY => write!(f, "UY"),
            Self::UZ => write!(f, "UZ"),
            Self::VU => write!(f, "VU"),
            Self::VE => write!(f, "VE"),
            Self::VN => write!(f, "VN"),
            Self::VG => write!(f, "VG"),
            Self::VI => write!(f, "VI"),
            Self::WF => write!(f, "WF"),
            Self::EH => write!(f, "EH"),
            Self::YE => write!(f, "YE"),
            Self::ZM => write!(f, "ZM"),
            Self::ZW => write!(f, "ZW"),
        }
    }
}

impl std::fmt::Display for CountryThreeCode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Self::AFG => write!(f, "AFG"),
            Self::ALB => write!(f, "ALB"),
            Self::DZA => write!(f, "DZA"),
            Self::ASM => write!(f, "ASM"),
            Self::AND => write!(f, "AND"),
            Self::AGO => write!(f, "AGO"),
            Self::AIA => write!(f, "AIA"),
            Self::ATA => write!(f, "ATA"),
            Self::ATG => write!(f, "ATG"),
            Self::ARG => write!(f, "ARG"),
            Self::ARM => write!(f, "ARM"),
            Self::ABW => write!(f, "ABW"),
            Self::AUS => write!(f, "AUS"),
            Self::AUT => write!(f, "AUT"),
            Self::AZE => write!(f, "AZE"),
            Self::BHS => write!(f, "BHS"),
            Self::BHR => write!(f, "BHR"),
            Self::BGD => write!(f, "BGD"),
            Self::BRB => write!(f, "BRB"),
            Self::BLR => write!(f, "BLR"),
            Self::BEL => write!(f, "BEL"),
            Self::BLZ => write!(f, "BLZ"),
            Self::BEN => write!(f, "BEN"),
            Self::BMU => write!(f, "BMU"),
            Self::ALA => write!(f, "ALA"),
            Self::FIN => write!(f, "FIN"),
            Self::FRA => write!(f, "FRA"),
            Self::GUF => write!(f, "GUF"),
            Self::PYF => write!(f, "PYF"),
            Self::ATF => write!(f, "ATF"),
            Self::GAB => write!(f, "GAB"),
            Self::GMB => write!(f, "GMB"),
            Self::GEO => write!(f, "GEO"),
            Self::DEU => write!(f, "DEU"),
            Self::GHA => write!(f, "GHA"),
            Self::GIB => write!(f, "GIB"),
            Self::GRC => write!(f, "GRC"),
            Self::GRL => write!(f, "GRL"),
            Self::GRD => write!(f, "GRD"),
            Self::GLP => write!(f, "GLP"),
            Self::GUM => write!(f, "GUM"),
            Self::GTM => write!(f, "GTM"),
            Self::GGY => write!(f, "GGY"),
            Self::GIN => write!(f, "GIN"),
            Self::GNB => write!(f, "GNB"),
            Self::GUY => write!(f, "GUY"),
            Self::HTI => write!(f, "HTI"),
            Self::HMD => write!(f, "HMD"),
            Self::VAT => write!(f, "VAT"),
            Self::HND => write!(f, "HND"),
            Self::HKG => write!(f, "HKG"),
            Self::HUN => write!(f, "HUN"),
            Self::ISL => write!(f, "ISL"),
            Self::IND => write!(f, "IND"),
            Self::IDN => write!(f, "IDN"),
            Self::IRN => write!(f, "IRN"),
            Self::IRQ => write!(f, "IRQ"),
            Self::IRL => write!(f, "IRL"),
            Self::IMN => write!(f, "IMN"),
            Self::ISR => write!(f, "ISR"),
            Self::ITA => write!(f, "ITA"),
            Self::JAM => write!(f, "JAM"),
            Self::JPN => write!(f, "JPN"),
            Self::JEY => write!(f, "JEY"),
            Self::JOR => write!(f, "JOR"),
            Self::KAZ => write!(f, "KAZ"),
            Self::KEN => write!(f, "KEN"),
            Self::KIR => write!(f, "KIR"),
            Self::PRK => write!(f, "PRK"),
            Self::KOR => write!(f, "KOR"),
            Self::KWT => write!(f, "KWT"),
            Self::KGZ => write!(f, "KGZ"),
            Self::LAO => write!(f, "LAO"),
            Self::LVA => write!(f, "LVA"),
            Self::LBN => write!(f, "LBN"),
            Self::LSO => write!(f, "LSO"),
            Self::LBR => write!(f, "LBR"),
            Self::LBY => write!(f, "LBY"),
            Self::LIE => write!(f, "LIE"),
            Self::LTU => write!(f, "LTU"),
            Self::LUX => write!(f, "LUX"),
            Self::MAC => write!(f, "MAC"),
            Self::MDG => write!(f, "MDG"),
            Self::MWI => write!(f, "MWI"),
            Self::MYS => write!(f, "MYS"),
            Self::MDV => write!(f, "MDV"),
            Self::MLI => write!(f, "MLI"),
            Self::MLT => write!(f, "MLT"),
            Self::MHL => write!(f, "MHL"),
            Self::MTQ => write!(f, "MTQ"),
            Self::MRT => write!(f, "MRT"),
            Self::MUS => write!(f, "MUS"),
            Self::MYT => write!(f, "MYT"),
            Self::MEX => write!(f, "MEX"),
            Self::FSM => write!(f, "FSM"),
            Self::MDA => write!(f, "MDA"),
            Self::MCO => write!(f, "MCO"),
            Self::MNG => write!(f, "MNG"),
            Self::MNE => write!(f, "MNE"),
            Self::MSR => write!(f, "MSR"),
            Self::MAR => write!(f, "MAR"),
            Self::MOZ => write!(f, "MOZ"),
            Self::MMR => write!(f, "MMR"),
            Self::NAM => write!(f, "NAM"),
            Self::NRU => write!(f, "NRU"),
            Self::NPL => write!(f, "NPL"),
            Self::NLD => write!(f, "NLD"),
            Self::NCL => write!(f, "NCL"),
            Self::NZL => write!(f, "NZL"),
            Self::NIC => write!(f, "NIC"),
            Self::NER => write!(f, "NER"),
            Self::NGA => write!(f, "NGA"),
            Self::NIU => write!(f, "NIU"),
            Self::NFK => write!(f, "NFK"),
            Self::MKD => write!(f, "MKD"),
            Self::MNP => write!(f, "MNP"),
            Self::NOR => write!(f, "NOR"),
            Self::OMN => write!(f, "OMN"),
            Self::PAK => write!(f, "PAK"),
            Self::PLW => write!(f, "PLW"),
            Self::PSE => write!(f, "PSE"),
            Self::PAN => write!(f, "PAN"),
            Self::PNG => write!(f, "PNG"),
            Self::PRY => write!(f, "PRY"),
            Self::PER => write!(f, "PER"),
            Self::PHL => write!(f, "PHL"),
            Self::PCN => write!(f, "PCN"),
            Self::POL => write!(f, "POL"),
            Self::PRT => write!(f, "PRT"),
            Self::PRI => write!(f, "PRI"),
            Self::QAT => write!(f, "QAT"),
            Self::ROU => write!(f, "ROU"),
            Self::RUS => write!(f, "RUS"),
            Self::RWA => write!(f, "RWA"),
            Self::REU => write!(f, "REU"),
            Self::BLM => write!(f, "BLM"),
            Self::SHN => write!(f, "SHN"),
            Self::KNA => write!(f, "KNA"),
            Self::LCA => write!(f, "LCA"),
            Self::MAF => write!(f, "MAF"),
            Self::SPM => write!(f, "SPM"),
            Self::VCT => write!(f, "VCT"),
            Self::WSM => write!(f, "WSM"),
            Self::SMR => write!(f, "SMR"),
            Self::STP => write!(f, "STP"),
            Self::SAU => write!(f, "SAU"),
            Self::SEN => write!(f, "SEN"),
            Self::SRB => write!(f, "SRB"),
            Self::SYC => write!(f, "SYC"),
            Self::SLE => write!(f, "SLE"),
            Self::SGP => write!(f, "SGP"),
            Self::SXM => write!(f, "SXM"),
            Self::SVK => write!(f, "SVK"),
            Self::SVN => write!(f, "SVN"),
            Self::SLB => write!(f, "SLB"),
            Self::SOM => write!(f, "SOM"),
            Self::ZAF => write!(f, "ZAF"),
            Self::SGS => write!(f, "SGS"),
            Self::SSD => write!(f, "SSD"),
            Self::ESP => write!(f, "ESP"),
            Self::LKA => write!(f, "LKA"),
            Self::SDN => write!(f, "SDN"),
            Self::SUR => write!(f, "SUR"),
            Self::SJM => write!(f, "SJM"),
            Self::SWE => write!(f, "SWE"),
            Self::CHE => write!(f, "CHE"),
            Self::SYR => write!(f, "SYR"),
            Self::TWN => write!(f, "TWN"),
            Self::TJK => write!(f, "TJK"),
            Self::TZA => write!(f, "TZA"),
            Self::THA => write!(f, "THA"),
            Self::TLS => write!(f, "TLS"),
            Self::TGO => write!(f, "TGO"),
            Self::TKL => write!(f, "TKL"),
            Self::TON => write!(f, "TON"),
            Self::TTO => write!(f, "TTO"),
            Self::TUN => write!(f, "TUN"),
            Self::TKM => write!(f, "TKM"),
            Self::TCA => write!(f, "TCA"),
            Self::TUV => write!(f, "TUV"),
            Self::TUR => write!(f, "TUR"),
            Self::UGA => write!(f, "UGA"),
            Self::UKR => write!(f, "UKR"),
            Self::ARE => write!(f, "ARE"),
            Self::GBR => write!(f, "GBR"),
            Self::UMI => write!(f, "UMI"),
            Self::USA => write!(f, "USA"),
            Self::URY => write!(f, "URY"),
            Self::UZB => write!(f, "UZB"),
            Self::VUT => write!(f, "VUT"),
            Self::VEN => write!(f, "VEN"),
            Self::VNM => write!(f, "VNM"),
            Self::VGB => write!(f, "VGB"),
            Self::VIR => write!(f, "VIR"),
            Self::WLF => write!(f, "WLF"),
            Self::ESH => write!(f, "ESH"),
            Self::YEM => write!(f, "YEM"),
            Self::ZMB => write!(f, "ZMB"),
            Self::ZWE => write!(f, "ZWE"),
        }
    }
}
